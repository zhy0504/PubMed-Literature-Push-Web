version: '3.8'

# RQ原生调度版本Docker Compose配置
# 使用Worker内置scheduler，无需独立scheduler容器

services:
  # Redis服务
  redis:
    image: redis:7-alpine
    container_name: pubmed-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
      - ./logs/redis:/var/log/redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # 主应用服务
  app:
    build: .
    container_name: pubmed-literature-push
    ports:
      - "5003:5003"
    env_file:
      - .env
    environment:
      # 数据库配置
      - DATABASE_URL=sqlite:////app/data/pubmed_app.db
      # Redis配置
      - REDIS_URL=redis://redis:6379/0
      # 时区配置
      - TZ=${TZ:-Asia/Shanghai}
      # 日志配置
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FILE=/app/logs/app.log
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # RQ Worker进程（内置Scheduler）
  worker:
    build: .
    container_name: pubmed-rq-worker
    command: python rq_worker.py
    env_file:
      - .env
    environment:
      # 数据库配置
      - DATABASE_URL=sqlite:////app/data/pubmed_app.db
      # Redis配置
      - REDIS_URL=redis://redis:6379/0
      # Worker配置
      - RQ_WORKER_NAME=pubmed-worker-docker
      - RQ_QUEUES=high,default,low
      # 时区配置
      - TZ=${TZ:-Asia/Shanghai}
      # 日志配置
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FILE=/app/logs/rq_worker.log
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
      app:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import redis; redis.Redis.from_url('redis://redis:6379/0').ping()"]
      interval: 30s
      timeout: 10s
      retries: 3

  # RQ Dashboard (可选) - 使用更新的镜像
  rq-dashboard:
    image: cjlapao/rq-dashboard:latest
    container_name: pubmed-rq-dashboard
    ports:
      - "9181:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - USERNAME=${RQ_DASHBOARD_USER:-admin}
      - PASSWORD=${RQ_DASHBOARD_PASS:-admin123}
    depends_on:
      - redis
    restart: unless-stopped
    profiles:
      - dashboard

  # Nginx反向代理 (生产环境)
  nginx:
    image: nginx:alpine
    container_name: pubmed-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis-data:
    driver: local

networks:
  default:
    name: pubmed-network